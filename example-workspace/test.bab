structuur Lijst<T> {
    veld inhoud: T[] = nieuw T[0],

    werkwijze voegToe(item: T) {
        stel oude = dit.inhoud;
        dit.inhoud = nieuw T[oude.lengte() + 1];

        volg i in reeks(0, oude.lengte()) {
            dit.inhoud[i] = oude[i];
        }

        dit.inhoud[oude.lengte()] = item;
    }

    werkwijze bevat(item: T) -> bool {
        volg bestaandItem in dit  .  inhoud {
            als bestaandItem == item {
                bekeer waar;
            }
        }

        bekeer onwaar;
    }

    werkwijze lengte() -> g32 {
        bekeer dit.inhoud.lengte();
    }
}

koppelvlak Enumerabel<T> {
    werkwijze lengte() -> g32;
    werkwijze krijg(plaats: g32) -> T;
}

uitbreiding<T> Enumerabel<T> op Lijst<T> {
    werkwijze lengte() -> g32 {
        bekeer dit.lengte();
    }

    werkwijze krijg(plaats: g32) -> T {
        bekeer dit.inhoud[plaats];
    }
}

stel lijst = nieuw Lijst<Slinger> {};
lijst.voegToe("Abc");
lijst.voegToe("Ghi");

stel naald = "Abc";
stel b = lijst.bevat(naald);
schrijf(€"Bevat {b}");

stel s = lijst.lengte();
schrijf(€"Lengte: {s}");